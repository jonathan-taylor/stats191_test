{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# ANOVA models\n",
    "\n",
    "Last time, we discussed the use of categorical variables\n",
    "in multivariate regression. Often, these are encoded as\n",
    "indicator columns in the design matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>(Intercept)</th><th scope=col>X</th><th scope=col>E2</th><th scope=col>E3</th><th scope=col>M1</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>1</td><td>1</td><td>0</td><td>1</td><td>1</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>1</td><td>2</td><td>1</td><td>0</td><td>1</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lllll}\n",
       "  & (Intercept) & X & E2 & E3 & M1\\\\\n",
       "\\hline\n",
       "\t1 & 1 & 1 & 0 & 0 & 1\\\\\n",
       "\t2 & 1 & 1 & 0 & 1 & 0\\\\\n",
       "\t3 & 1 & 1 & 0 & 1 & 1\\\\\n",
       "\t4 & 1 & 1 & 1 & 0 & 0\\\\\n",
       "\t5 & 1 & 1 & 0 & 1 & 0\\\\\n",
       "\t6 & 1 & 2 & 1 & 0 & 1\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "1. 1\n",
       "2. 1\n",
       "3. 1\n",
       "4. 1\n",
       "5. 1\n",
       "6. 1\n",
       "7. 1\n",
       "8. 1\n",
       "9. 1\n",
       "10. 1\n",
       "11. 1\n",
       "12. 2\n",
       "13. 0\n",
       "14. 0\n",
       "15. 0\n",
       "16. 1\n",
       "17. 0\n",
       "18. 1\n",
       "19. 0\n",
       "20. 1\n",
       "21. 1\n",
       "22. 0\n",
       "23. 1\n",
       "24. 0\n",
       "25. 1\n",
       "26. 0\n",
       "27. 1\n",
       "28. 0\n",
       "29. 0\n",
       "30. 1\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "  (Intercept) X E2 E3 M1\n",
       "1 1           1 0  0  1 \n",
       "2 1           1 0  1  0 \n",
       "3 1           1 0  1  1 \n",
       "4 1           1 1  0  0 \n",
       "5 1           1 0  1  0 \n",
       "6 1           2 1  0  1 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "url = 'http://stats191.stanford.edu/data/salary.table'\n",
    "salary.table = read.table(url, header=T)\n",
    "salary.table$E = factor(salary.table$E)\n",
    "salary.table$M = factor(salary.table$M)\n",
    "salary.lm = lm(S ~ X + E + M, salary.table)\n",
    "head(model.matrix(salary.lm))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "* Often, especially in experimental settings, we record\n",
    "*only* categorical variables. \n",
    "\n",
    "* Such models are often referred to *ANOVA (Analysis of Variance)* models.\n",
    "\n",
    "* These are generalizations of our favorite example, the two sample $t$-test."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Example: recovery time\n",
    "\n",
    "* Suppose we want to understand the relationship between\n",
    "recovery time after surgery based on an patient's prior fitness.\n",
    "\n",
    "* We group patients into three fitness levels: below average, average, above average.\n",
    "\n",
    "* If you are in better shape before surgery, does it take less time to\n",
    "  recover?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Fitness</th><th scope=col>Time</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>1 </td><td>29</td></tr>\n",
       "\t<tr><td>1 </td><td>42</td></tr>\n",
       "\t<tr><td>1 </td><td>38</td></tr>\n",
       "\t<tr><td>1 </td><td>40</td></tr>\n",
       "\t<tr><td>1 </td><td>43</td></tr>\n",
       "\t<tr><td>1 </td><td>40</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|ll}\n",
       " Fitness & Time\\\\\n",
       "\\hline\n",
       "\t 1  & 29\\\\\n",
       "\t 1  & 42\\\\\n",
       "\t 1  & 38\\\\\n",
       "\t 1  & 40\\\\\n",
       "\t 1  & 43\\\\\n",
       "\t 1  & 40\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  Fitness Time\n",
       "1 1       29  \n",
       "2 1       42  \n",
       "3 1       38  \n",
       "4 1       40  \n",
       "5 1       43  \n",
       "6 1       40  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "url = 'http://stats191.stanford.edu/data/rehab.csv'\n",
    "rehab.table = read.table(url, header=T, sep=',')\n",
    "rehab.table$Fitness <- factor(rehab.table$Fitness) \n",
    "head(rehab.table)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAYAAAD958/bAAAD8GlDQ1BJQ0MgUHJvZmlsZQAA\nOI2NVd1v21QUP4lvXKQWP6Cxjg4Vi69VU1u5GxqtxgZJk6XpQhq5zdgqpMl1bhpT1za2021V\nn/YCbwz4A4CyBx6QeEIaDMT2su0BtElTQRXVJKQ9dNpAaJP2gqpwrq9Tu13GuJGvfznndz7v\n0TVAx1ea45hJGWDe8l01n5GPn5iWO1YhCc9BJ/RAp6Z7TrpcLgIuxoVH1sNfIcHeNwfa6/9z\ndVappwMknkJsVz19HvFpgJSpO64PIN5G+fAp30Hc8TziHS4miFhheJbjLMMzHB8POFPqKGKW\ni6TXtSriJcT9MzH5bAzzHIK1I08t6hq6zHpRdu2aYdJYuk9Q/881bzZa8Xrx6fLmJo/iu4/V\nXnfH1BB/rmu5ScQvI77m+BkmfxXxvcZcJY14L0DymZp7pML5yTcW61PvIN6JuGr4halQvmjN\nlCa4bXJ5zj6qhpxrujeKPYMXEd+q00KR5yNAlWZzrF+Ie+uNsdC/MO4tTOZafhbroyXuR3Df\n08bLiHsQf+ja6gTPWVimZl7l/oUrjl8OcxDWLbNU5D6JRL2gxkDu16fGuC054OMhclsyXTOO\nFEL+kmMGs4i5kfNuQ62EnBuam8tzP+Q+tSqhz9SuqpZlvR1EfBiOJTSgYMMM7jpYsAEyqJCH\nDL4dcFFTAwNMlFDUUpQYiadhDmXteeWAw3HEmA2s15k1RmnP4RHuhBybdBOF7MfnICmSQ2SY\njIBM3iRvkcMki9IRcnDTthyLz2Ld2fTzPjTQK+Mdg8y5nkZfFO+se9LQr3/09xZr+5GcaSuf\neAfAww60mAPx+q8u/bAr8rFCLrx7s+vqEkw8qb+p26n11Aruq6m1iJH6PbWGv1VIY25mkNE8\nPkaQhxfLIF7DZXx80HD/A3l2jLclYs061xNpWCfoB6WHJTjbH0mV35Q/lRXlC+W8cndbl9t2\nSfhU+Fb4UfhO+F74GWThknBZ+Em4InwjXIyd1ePnY/Psg3pb1TJNu15TMKWMtFt6ScpKL0iv\nSMXIn9QtDUlj0h7U7N48t3i8eC0GnMC91dX2sTivgloDTgUVeEGHLTizbf5Da9JLhkhh29QO\ns1luMcScmBXTIIt7xRFxSBxnuJWfuAd1I7jntkyd/pgKaIwVr3MgmDo2q8x6IdB5QH162mcX\n7ajtnHGN2bov71OU1+U0fqqoXLD0wX5ZM005UHmySz3qLtDqILDvIL+iH6jB9y2x83ok898G\nOPQX3lk3Itl0A+BrD6D7tUjWh3fis58BXDigN9yF8M5PJH4B8Gr79/F/XRm8m241mw/wvur4\nBGDj42bzn+Vmc+NL9L8GcMn8F1kAcXgSteGGAABAAElEQVR4Ae3dCZRtV1kn8PuSl5dAQiDB\nBJklEAYXypCELIZEZQFCMIqLBoTV2jgE1LXEBTSd7mCjDInSCgqybFEXzSDEARQRmaJEQQaB\nBDqBThBCAgQhQRICCZne0P8dqrCquK/qVtUd9tn7t9f6qLrnnnP2/n5fPVJfnXvPHY0MAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI\nECBAgAABAgQIECBAoHqBHdWvsJ8FHp9UD+onXZkSIECAAAECBAg0JHBTcjmvhXw0SHVUsTRH\nH61jKVZBgAABAgQIECBAYEsC5XfawTdJO7eUuoOmLbB85eg2OXHpvg0CBAgQIECAAAECQxHY\nlYV+M1G+Dn5okOoqYWmONEh11cRqCBAgQIAAAQIEOhI4oKNcpUqAAAECBAgQIECAAIF1BTRI\n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\nAAECBAgQIECAAIFVAhqkVRweECBAgAABAgQIECDQs4AGqefqy50AAQIECBAgQIAAgVUCGqRV\nHB4QIECAAAECBAgQINCzgAap5+rLnQABAgQIECBAgACBVQIapFUcHhAgQIAAAQIECBAg0LOA\nBqnn6sudAAECBAgQIECAAIFVAhqkVRweECBAgAABAgQIECDQs4AGqefqy50AAQIECBAgQIAA\ngVUCGqRVHB4QIECAAAECBAgQINCzgAap5+rLnQABAgQIECBAgACBVQIapFUcHhAgQIAAAQIE\nCBAg0LOABqnn6sudAAECBAgQIECAAIFVAhqkVRweECBAgAABAgQIECDQs4AGqefqy50AAQIE\nCBAgQIAAgVUCGqRVHB4QIECAAAECBAgQINCzgAap5+rLnQABAgQIECBAgACBVQIapFUcHhAg\nQIAAAQIECBAg0LOABqnn6sudAAECBAgQIECAAIFVAhqkVRweECBAgAABAgQIECDQs4AGqefq\ny50AAQIECBAgQIAAgVUCGqRVHB4QIECAAAECBAgQINCzgAap5+rLnQABAgQIECBAgACBVQIa\npFUcHhAgQIAAAQIECBAg0LOABqnn6sudAAECBAgQIECAAIFVAhqkVRweECBAgAABAgQIECDQ\ns4AGqefqy50AAQIECBAgQIAAgVUCGqRVHB4QIECAAAECBAgQINCzgAap5+rLnQABAgQIECBA\ngACBVQIapFUcHhAgQIAAAQIECBAg0LOABqnn6sudAAECBAgQIECAAIFVAhqkVRweECBAgAAB\nAgQIECDQs4AGqefqy50AAQIECBAgQIAAgVUCGqRVHB4QIECAAAECBAgQINCzgAap5+rLnQAB\nAgQIECBAgACBVQIapFUcHhAgQIAAAQIECBAg0LPAzp6TlzsBAgQIECDQi8D5SfSMXpKV52AF\n9u4Y7NIbWrgGqaFiSoUAAQIECBDYn8CFeaKEQaBmgQM0SBWUx0vsKiiCJRAgQIAAAQIECBAg\nUIeABqmOOlgFAQIECBAgQIAAAQIVCHiJXQVFsAQCBAgQIEBg1gKPywT/c9aTOD+BbQr80L7R\naO82z+Hw7QpokLYr6HgCBAgQIEBgAAJHZ40PHcA6LbFvgR1pkIxFC3iJ3aIrYH4CBAgQIECA\nAAECBKoR0CBVUwoLIUCAAAECBAgQIEBg0QIapEVXwPwECBAgQIAAAQIECFQjoEGqphQWQoAA\n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\nJgKuIM2E1Uk7ESh/xS5/6d4ojujEQ5oEpiVweE70ysTuxPK/r+vy/a8l3OY7CEYbAuUNrAYB\nAgQIECBAgACBSQXKbb7vkyhXkC5JlM8XMwgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ\nIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAh0IvD/AftuLkIDZPXKAAAAAElF\nTkSuQmCC",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "attach(rehab.table)\n",
    "boxplot(Time ~ Fitness, col=c('red','green','blue'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## One-way ANOVA\n",
    "\n",
    "*   First generalization of two sample $t$-test: more than two groups.\n",
    "\n",
    "* Observations are broken up into $r$ groups with $n_i, 1 \\leq i \\leq r$ observations per group.\n",
    "\n",
    "*  Model:\n",
    "    $$Y_{ij} = \\mu  + \\alpha_i + \\varepsilon_{ij}, \\qquad \\varepsilon_{ij} \\sim N(0, \\sigma^2).$$\n",
    "\n",
    "*   Constraint: $\\sum_{i=1}^r \\alpha_i = 0$. This constraint is needed\n",
    "    for “identifiability”. This is “equivalent” to only adding $r-1$\n",
    "    columns to the design matrix for this qualitative variable.\n",
    "    \n",
    "* This is not the same *parameterization* we get when only adding $r-1$ 0-1 columns, but it gives the same *model*.\n",
    "\n",
    "* The estimates of $\\alpha$ can be obtained from the estimates\n",
    "of $\\beta$ using `R`'s default parameters.\n",
    "\n",
    "* For a more detailed exploration into `R`'s creation of design matrices,\n",
    "try reading the following [tutorial on design matrices](http://nbviewer.ipython.org/github/fperez/nipy-notebooks/blob/master/exploring_r_formula.ipynb).\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Remember, it's still a model (i.e. a plane)\n",
    "\n",
    "<img src=\"figs/axes_multiple_full.svg\">\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Fitting the model\n",
    "\n",
    "\n",
    "-   Model is easy to fit:\n",
    "    $$\\widehat{Y}_{ij} = \\frac{1}{n_i} \\sum_{j=1}^{n_i} Y_{ij} = \\overline{Y}_{i\\cdot}.$$\n",
    "    If observation is in $i$-th group: predicted mean is just the sample\n",
    "    mean of observations in $i$-th group.\n",
    "\n",
    "-   Simplest question: is there any group (main) effect?\n",
    " $$H_0:\\alpha_1 = \\dots = \\alpha_r= 0?$$\n",
    "\n",
    "-   Test is based on $F$-test with full model vs. reduced model. Reduced\n",
    "    model just has an intercept.\n",
    "\n",
    "-   Other questions: is the effect the same in groups 1 and 2?\n",
    "    $$H_0:\\alpha_1=\\alpha_2?$$\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "Call:\n",
       "lm(formula = Time ~ Fitness)\n",
       "\n",
       "Residuals:\n",
       "   Min     1Q Median     3Q    Max \n",
       "  -9.0   -3.0   -0.5    3.0    8.0 \n",
       "\n",
       "Coefficients:\n",
       "            Estimate Std. Error t value Pr(>|t|)    \n",
       "(Intercept)   38.000      1.574  24.149  < 2e-16 ***\n",
       "Fitness2      -6.000      2.111  -2.842  0.00976 ** \n",
       "Fitness3     -14.000      2.404  -5.824 8.81e-06 ***\n",
       "---\n",
       "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
       "\n",
       "Residual standard error: 4.451 on 21 degrees of freedom\n",
       "Multiple R-squared:  0.6176,\tAdjusted R-squared:  0.5812 \n",
       "F-statistic: 16.96 on 2 and 21 DF,  p-value: 4.129e-05\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "rehab.lm <- lm(Time ~ Fitness)\n",
    "summary(rehab.lm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " 1  2  3 \n",
      "38 32 24 \n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>38</li>\n",
       "\t<li>32</li>\n",
       "\t<li>24</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 38\n",
       "\\item 32\n",
       "\\item 24\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 38\n",
       "2. 32\n",
       "3. 24\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] 38 32 24"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(predict(rehab.lm, list(Fitness=factor(c(1,2,3)))))\n",
    "c(mean(Time[Fitness == 1]), mean(Time[Fitness == 2]), mean(Time[Fitness == 3]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "Recall that the rows of the `Coefficients` table above do not\n",
    "correspond to the $\\alpha$ parameter. For one thing, we would see \n",
    "three $\\alpha$'s and their sum would have to be equal to 0.\n",
    "\n",
    "Also, the design matrix is the indicator coding we saw last time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>(Intercept)</th><th scope=col>Fitness2</th><th scope=col>Fitness3</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lll}\n",
       "  & (Intercept) & Fitness2 & Fitness3\\\\\n",
       "\\hline\n",
       "\t1 & 1 & 0 & 0\\\\\n",
       "\t2 & 1 & 0 & 0\\\\\n",
       "\t3 & 1 & 0 & 0\\\\\n",
       "\t4 & 1 & 0 & 0\\\\\n",
       "\t5 & 1 & 0 & 0\\\\\n",
       "\t6 & 1 & 0 & 0\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "1. 1\n",
       "2. 1\n",
       "3. 1\n",
       "4. 1\n",
       "5. 1\n",
       "6. 1\n",
       "7. 0\n",
       "8. 0\n",
       "9. 0\n",
       "10. 0\n",
       "11. 0\n",
       "12. 0\n",
       "13. 0\n",
       "14. 0\n",
       "15. 0\n",
       "16. 0\n",
       "17. 0\n",
       "18. 0\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "  (Intercept) Fitness2 Fitness3\n",
       "1 1           0        0       \n",
       "2 1           0        0       \n",
       "3 1           0        0       \n",
       "4 1           0        0       \n",
       "5 1           0        0       \n",
       "6 1           0        0       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "head(model.matrix(rehab.lm))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "* There are ways to get *different* design matrices by using the\n",
    "`contrasts` argument. This is a bit above our pay grade at the moment.\n",
    "\n",
    "* Upon inspection of the design matrix above, we see that\n",
    "the `(Intercept)` coefficient corresponds to the mean in `Fitness==1`, while\n",
    "`Fitness==2` coefficient corresponds to the difference between the groups \n",
    "`Fitness==2` and `Fitness==1`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## ANOVA table\n",
    "\n",
    "Much of the information in an ANOVA model is contained in the \n",
    "ANOVA table.\n",
    "\n",
    "<table>\n",
    "<tr><td>Source</td><td width=\"300\">SS</td><td width=\"100\">df</td><td width=\"100\">$\\mathbb{E}(MS)$</td></tr>\n",
    "<tr><td>Treatment</td><td>$SSTR=\\sum_{i=1}^r n_i \\left(\\overline{Y}_{i\\cdot} - \\overline{Y}_{\\cdot\\cdot}\\right)^2$</td><td>r-1</td><td>$\\sigma^2 + \\frac{\\sum_{i=1}^r n_i \\alpha_i^2}{r-1}$</td></tr>\n",
    "<tr><td>Error</td><td>$SSE=\\sum_{i=1}^r \\sum_{j=1}^{n_i}(Y_{ij} - \\overline{Y}_{i\\cdot})^2$</td>\n",
    "<td>$\\sum_{i=1}^r (n_i - 1)$</td><td>$\\sigma^2$</td></tr>\n",
    "</table>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>Df</th><th scope=col>Sum Sq</th><th scope=col>Mean Sq</th><th scope=col>F value</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>Fitness</th><td> 2          </td><td>672         </td><td>336.00000   </td><td>16.96154    </td><td>4.129301e-05</td></tr>\n",
       "\t<tr><th scope=row>Residuals</th><td>21          </td><td>416         </td><td> 19.80952   </td><td>      NA    </td><td>          NA</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lllll}\n",
       "  & Df & Sum Sq & Mean Sq & F value & Pr(>F)\\\\\n",
       "\\hline\n",
       "\tFitness &  2           & 672          & 336.00000    & 16.96154     & 4.129301e-05\\\\\n",
       "\tResiduals & 21           & 416          &  19.80952    &       NA     &           NA\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "          Df Sum Sq Mean Sq   F value  Pr(>F)      \n",
       "Fitness    2 672    336.00000 16.96154 4.129301e-05\n",
       "Residuals 21 416     19.80952       NA           NA"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "anova(rehab.lm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "-   Note that $MSTR$ measures “variability” of the “cell” means. If\n",
    "    there is a group effect we expect this to be large relative to\n",
    "    $MSE$.\n",
    "\n",
    "-   We see that under $H_0:\\alpha_1=\\dots=\\alpha_r=0$, the expected\n",
    "    value of $MSTR$ and $MSE$ is $\\sigma^2$. This tells us how to test\n",
    "    $H_0$ using ratio of mean squares, i.e. an $F$ test.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Testing for any main effect\n",
    "\n",
    "\n",
    "-   Rows in the ANOVA table are, in general, independent.\n",
    "\n",
    "-   Therefore, under $H_0$\n",
    "    $$F = \\frac{MSTR}{MSE} = \\frac{\\frac{SSTR}{df_{TR}}}{\\frac{SSE}{df_{E}}} \\sim F_{df_{TR}, df_E}$$\n",
    "    the degrees of freedom come from the $df$ column in previous table.\n",
    "\n",
    "-   Reject $H_0$ at level $\\alpha$ if\n",
    "    $F > F_{1-\\alpha, df_{TR}, df_{E}}.$\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         F         pval\n",
      "1 16.96113 4.129945e-05\n"
     ]
    }
   ],
   "source": [
    "F = 336.00 / 19.81\n",
    "pval = 1 - pf(F, 2, 21)\n",
    "print(data.frame(F,pval))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Inference for linear combinations\n",
    "\n",
    "- Suppose we want to ``infer'' something about\n",
    "   $$                                                                           \n",
    "   \\sum_{i=1}^r a_i \\mu_i$$\n",
    "   where $\\mu_i = \\mu+\\alpha_i$ is the mean in the $i$-th group.\n",
    "   For example:\n",
    "   $$\n",
    "   H_0:\\mu_1-\\mu_2=0 \\qquad \\text{(same as $H_0:\\alpha_1-\\alpha_2=0$)}?$$       \n",
    "- For example:\n",
    "\n",
    "    Is there a difference between below average and average groups in \n",
    "    terms of rehab time?                                                                      \n",
    "- We need to know $$\n",
    "   \\text{Var}\\left(\\sum_{i=1}^r a_i \\overline{Y}_{i\\cdot} \\right) = \\sigma^2 \n",
    "   \\sum_{i=1}^r \\frac{a_i^2}{n_i}.$$\n",
    "   \n",
    "- After this, the usual confidence intervals and $t$-tests apply.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>(Intercept)</th><th scope=col>Fitness2</th><th scope=col>Fitness3</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>1</td><td>0</td><td>0</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lll}\n",
       "  & (Intercept) & Fitness2 & Fitness3\\\\\n",
       "\\hline\n",
       "\t1 & 1 & 0 & 0\\\\\n",
       "\t2 & 1 & 0 & 0\\\\\n",
       "\t3 & 1 & 0 & 0\\\\\n",
       "\t4 & 1 & 0 & 0\\\\\n",
       "\t5 & 1 & 0 & 0\\\\\n",
       "\t6 & 1 & 0 & 0\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "1. 1\n",
       "2. 1\n",
       "3. 1\n",
       "4. 1\n",
       "5. 1\n",
       "6. 1\n",
       "7. 0\n",
       "8. 0\n",
       "9. 0\n",
       "10. 0\n",
       "11. 0\n",
       "12. 0\n",
       "13. 0\n",
       "14. 0\n",
       "15. 0\n",
       "16. 0\n",
       "17. 0\n",
       "18. 0\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "  (Intercept) Fitness2 Fitness3\n",
       "1 1           0        0       \n",
       "2 1           0        0       \n",
       "3 1           0        0       \n",
       "4 1           0        0       \n",
       "5 1           0        0       \n",
       "6 1           0        0       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "head(model.matrix(rehab.lm))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "This means that the coefficient Fitness2 is the estimated\n",
    "   difference between the two groups.\n",
    "\n",
    "   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "detach(rehab.table)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Two-way ANOVA\n",
    "\n",
    "Often, we will have more than one variable we are changing.\n",
    "\n",
    "### Example\n",
    "\n",
    "After kidney failure, we suppose that the time of stay in hospital depends on weight gain between treatments and duration of treatment. \n",
    "\n",
    "We will model the `log` number of days as a function of the other\n",
    "two factors.\n",
    "\n",
    "<table>\n",
    "<tr><td><b>Variable</b></td><td><b>Description</b></td></tr>\n",
    "<tr><td>Days</td><td>Duration of hospital stay</td></tr>\n",
    "<tr><td>Weight</td><td>How much weight is gained?</td></tr>\n",
    "<tr><td>Duration</td><td>How long under treatment for kidney problems? (two levels)</td></tr>\n",
    "</table>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Days</th><th scope=col>Duration</th><th scope=col>Weight</th><th scope=col>ID</th><th scope=col>D</th><th scope=col>W</th><th scope=col>logDays</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>0        </td><td>1        </td><td>1        </td><td>1        </td><td>1        </td><td>1        </td><td>0.0000000</td></tr>\n",
       "\t<tr><td>2        </td><td>1        </td><td>1        </td><td>2        </td><td>1        </td><td>1        </td><td>1.0986123</td></tr>\n",
       "\t<tr><td>1        </td><td>1        </td><td>1        </td><td>3        </td><td>1        </td><td>1        </td><td>0.6931472</td></tr>\n",
       "\t<tr><td>3        </td><td>1        </td><td>1        </td><td>4        </td><td>1        </td><td>1        </td><td>1.3862944</td></tr>\n",
       "\t<tr><td>0        </td><td>1        </td><td>1        </td><td>5        </td><td>1        </td><td>1        </td><td>0.0000000</td></tr>\n",
       "\t<tr><td>2        </td><td>1        </td><td>1        </td><td>6        </td><td>1        </td><td>1        </td><td>1.0986123</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lllllll}\n",
       " Days & Duration & Weight & ID & D & W & logDays\\\\\n",
       "\\hline\n",
       "\t 0         & 1         & 1         & 1         & 1         & 1         & 0.0000000\\\\\n",
       "\t 2         & 1         & 1         & 2         & 1         & 1         & 1.0986123\\\\\n",
       "\t 1         & 1         & 1         & 3         & 1         & 1         & 0.6931472\\\\\n",
       "\t 3         & 1         & 1         & 4         & 1         & 1         & 1.3862944\\\\\n",
       "\t 0         & 1         & 1         & 5         & 1         & 1         & 0.0000000\\\\\n",
       "\t 2         & 1         & 1         & 6         & 1         & 1         & 1.0986123\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  Days Duration Weight ID D W logDays  \n",
       "1 0    1        1      1  1 1 0.0000000\n",
       "2 2    1        1      2  1 1 1.0986123\n",
       "3 1    1        1      3  1 1 0.6931472\n",
       "4 3    1        1      4  1 1 1.3862944\n",
       "5 0    1        1      5  1 1 0.0000000\n",
       "6 2    1        1      6  1 1 1.0986123"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "url = 'http://statweb.stanford.edu/~jtaylo/stats191/data/kidney.table'\n",
    "kidney.table = read.table(url, header=T)\n",
    "kidney.table$D = factor(kidney.table$Duration)\n",
    "kidney.table$W = factor(kidney.table$Weight)\n",
    "kidney.table$logDays = log(kidney.table$Days + 1) \n",
    "attach(kidney.table)\n",
    "head(kidney.table)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Two-way ANOVA model\n",
    "\n",
    "-   Second generalization of $t$-test: more than one grouping variable.\n",
    "\n",
    "-   Two-way ANOVA model: \n",
    "    - $r$ groups in first factor\n",
    "    - $m$ groups in second factor\n",
    "    - $n_{ij}$ in each combination of factor variables.\n",
    "\n",
    "- Model: \n",
    "    $$Y_{ijk} = \\mu + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} +         \n",
    "    \\varepsilon_{ijk} , \\qquad \\varepsilon_{ijk} \\sim N(0, \\sigma^2).$$\n",
    "\n",
    "-   In kidney example, $r=3$ (weight gain), $m=2$ (duration of\n",
    "    treatment), $n_{ij}=10$ for all $(i,j)$.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Questions of interest\n",
    "\n",
    "\n",
    "Two-way ANOVA: main questions of interest\n",
    "\n",
    "-   Are there main effects for the grouping variables?\n",
    "    $$H_0:\\alpha_1 = \\dots = \\alpha_r = 0, \\qquad H_0: \\beta_1 = \\dots = \\beta_m = 0.$$\n",
    "\n",
    "-   Are there interaction effects:\n",
    "    $$H_0:(\\alpha\\beta)_{ij} = 0, 1 \\leq i \\leq r, 1 \\leq j \\leq m.$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Interactions between factors\n",
    "\n",
    "We've already seen these interactions in the IT salary example. \n",
    "\n",
    "- An *additive model* says that the effects of the two factors\n",
    "occur additively -- such a model has no interactions.\n",
    "\n",
    "- An *interaction* is present whenever the additive model does not hold."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Interaction plot\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAYAAAD958/bAAAD8GlDQ1BJQ0MgUHJvZmlsZQAA\nOI2NVd1v21QUP4lvXKQWP6Cxjg4Vi69VU1u5GxqtxgZJk6XpQhq5zdgqpMl1bhpT1za2021V\nn/YCbwz4A4CyBx6QeEIaDMT2su0BtElTQRXVJKQ9dNpAaJP2gqpwrq9Tu13GuJGvfznndz7v\n0TVAx1ea45hJGWDe8l01n5GPn5iWO1YhCc9BJ/RAp6Z7TrpcLgIuxoVH1sNfIcHeNwfa6/9z\ndVappwMknkJsVz19HvFpgJSpO64PIN5G+fAp30Hc8TziHS4miFhheJbjLMMzHB8POFPqKGKW\ni6TXtSriJcT9MzH5bAzzHIK1I08t6hq6zHpRdu2aYdJYuk9Q/881bzZa8Xrx6fLmJo/iu4/V\nXnfH1BB/rmu5ScQvI77m+BkmfxXxvcZcJY14L0DymZp7pML5yTcW61PvIN6JuGr4halQvmjN\nlCa4bXJ5zj6qhpxrujeKPYMXEd+q00KR5yNAlWZzrF+Ie+uNsdC/MO4tTOZafhbroyXuR3Df\n08bLiHsQf+ja6gTPWVimZl7l/oUrjl8OcxDWLbNU5D6JRL2gxkDu16fGuC054OMhclsyXTOO\nFEL+kmMGs4i5kfNuQ62EnBuam8tzP+Q+tSqhz9SuqpZlvR1EfBiOJTSgYMMM7jpYsAEyqJCH\nDL4dcFFTAwNMlFDUUpQYiadhDmXteeWAw3HEmA2s15k1RmnP4RHuhBybdBOF7MfnICmSQ2SY\njIBM3iRvkcMki9IRcnDTthyLz2Ld2fTzPjTQK+Mdg8y5nkZfFO+se9LQr3/09xZr+5GcaSuf\neAfAww60mAPx+q8u/bAr8rFCLrx7s+vqEkw8qb+p26n11Aruq6m1iJH6PbWGv1VIY25mkNE8\nPkaQhxfLIF7DZXx80HD/A3l2jLclYs061xNpWCfoB6WHJTjbH0mV35Q/lRXlC+W8cndbl9t2\nSfhU+Fb4UfhO+F74GWThknBZ+Em4InwjXIyd1ePnY/Psg3pb1TJNu15TMKWMtFt6ScpKL0iv\nSMXIn9QtDUlj0h7U7N48t3i8eC0GnMC91dX2sTivgloDTgUVeEGHLTizbf5Da9JLhkhh29QO\ns1luMcScmBXTIIt7xRFxSBxnuJWfuAd1I7jntkyd/pgKaIwVr3MgmDo2q8x6IdB5QH162mcX\n7ajtnHGN2bov71OU1+U0fqqoXLD0wX5ZM005UHmySz3qLtDqILDvIL+iH6jB9y2x83ok898G\nOPQX3lk3Itl0A+BrD6D7tUjWh3fis58BXDigN9yF8M5PJH4B8Gr79/F/XRm8m241mw/wvur4\nBGDj42bzn+Vmc+NL9L8GcMn8F1kAcXgSteGGAABAAElEQVR4AezdCZwjVbn38Sc93ckgOyjr\nRRARURZBQUS9KCC4Ky7g7nUD71W8goCKwmVQQMUdFRSVq6+yiOvFDTeUTURQEEU2R5RlhGEZ\nYLbu9HSf9/+kKz01PZ100p2lqs7vfD4PVUkqVed8T5jOk1N1yoyCAAIIIIAAAggggAACCCCA\nAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggg\ngAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAII\nIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAAC\nCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAA\nAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCA\nAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggg\ngAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAII\nIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAAC\nCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAA\nAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCA\nAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggg\ngAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAII\nIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAAC\nCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAA\nAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCA\nAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggg\ngAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAII\nIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAAC\nCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAA\nAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCA\nAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggg\ngAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAII\nIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAAC\nCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAA\nAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCA\nAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggg\ngAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAII\nIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAAC\nCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAKZFyhl\n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\nqxZYt+oWNEBgF4E1X8vRo3JU7NG7PLXnB/IlstXZe97EswQIECBAgAABAgTGJyAgjc+25y2v\nyRfAVqUsBAgQIECAAAECBFoj4CINrZkqHSVAgAABAgQIECBAYNwCAtK4hbVPgAABAgQIECBA\ngEBrBASk1kyVjhIgQIAAAQIECBAgMG4BAWncwtonQIAAAQIECBAgQKA1AgJSa6ZKRwkQIECA\nAAECBAgQGLeAgDRuYe0TIECAAAECBAgQINAaAQGpNVOlowQIECBAgAABAgQIjFtAQBq3sPYJ\nECBAgAABAgQIEGiNgIDUmqnSUQIECBAgQIAAAQIExi0gII1bWPsECBAgQIAAAQIECLRGQEBq\nzVTpKAECBAgQIECAAAEC4xYQkMYtrH0CBAgQIECAAAECBFojICC1Zqp0lAABAgQIECBAgACB\ncQsISOMW1j4BAgQIECBAgAABAq0REJBaM1U6SoAAAQIECBAgQIDAuAXWjXsH2l+RwNyKtrYx\nAQIECBAgQIAAgekLdOp3WAFp+m+o0oOtg27cOhvd0QsCBAgQIECAAAECKxaYX/ErZvAFa2aw\nT33t0jdn4Ov7OnjjJkCAAAECBAgQaLVACUcXtnoEOk+AAAECBAgQIECAAAECBAgQIECAAAEC\nBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAEC\nBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAEC\nBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAEC\nBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAEC\nBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAEC\nBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAEC\nBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAh0QWC/LgzC\nGFoncJ/0+Cmpi1vXcx0mQGB3AgfmiUemTk0dmroltSVlIUCgGwIHZxinpB6Rujm1KWUhQIAA\ngREIHJI2/i116wja0gQBArMh8Nx049pU3agSkF6YshAg0H6B78sQNqaaP+Pn5/6R7R+aERAg\nQGC6Aodl9x9JlX9gBaTpzoW9ExiVwBPS0PbUV1I/n3poqgSjS1PlZ/05KQsBAu0VeFy6fkfq\ni6kfSZWf8Vembk+VxzakLAQIECCwDwJPz2uuSpVfmMppNwJSECwEOiDwiYyh/FyfsWgsJw8e\nv2TR4+4SINAugQ+mu+VnvJwa31zenjvl8fJHEgsBAgQIrFDgydm+/CN6feppqc+nBKQgWAi0\nXGBt+v/ZVAlBS32mtRxFKn95Xuq5PGwhQKAFAuWo0WtSaxb1tRwdLv9vdyrtIhh3CRAgsByB\n8telX0ndY7CxgLQcNdsQaLfA/ul++SD3l9o9DL0nQGAJgRKWzk6VgPSQJZ73EAECBAisUEBA\nWiGYzQm0UOCV6XP55an85dlCgEA3BB6cYbwqVf4/vi310ykLAQIECIxAQEAaAaImCMywwDPS\nt/LL02WpA2a4n7pGgMDKBN6azcsfPkqVCzSckLIQIECAwAgEBKQRIGqCwIwKnJl+zaeuST0o\nZSFAoDsCx2Qo90o9P3VxautgPTcWAgQIEFiNgIC0Gj2vJTC7Aq9I18pfli9PPWB2u6lnBAiM\nQKB89qj8vJegZCFAgACBVQoISKsE9HICMyZQPrD9W6nyy1K5ql35C7OFAIHuC3w6Qyw/98d2\nf6hGSIAAgfEKCEjj9dU6gUkKlEt9vz1Vfkl6T+rAlIUAgW4I3C3DKFei/PhuhnN+Hi8/+8Or\n1O5mMw8TIECAwN4EBKS9CXmeQHsEXpCull+Qzk75vqP2zJueEliuwIXZsFx05RGLXnDK4PGL\nFj3uLoHWCyz+0q/WD8gAWiFQAtL9Uwe3orc6SYDA7gQOzxPlr8uHpspfmHf3BdDPznObUhYC\nBNoncFq6/InU11JvT/196pGpl6fK9509OiUkBcFCgACB1Qg4grQaPa8lMDsC35WulKNHe6vD\nZqfLekKAwD4IfHtec2mq+bN+Qe4/fB/a8hICBAgQIECAAAECBAh0QuDojOLkVDlqbCFAgAAB\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAAB\nAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAoKUC+7W037pNgAABAgSGAodl5cmp\ne6SuHD7YuD006+X5B6W+mppPLV6+NQ88IvWfqTtSFgIECBAgQIAAAQIECLRS4JD0emvqP3fT\n++fl8XpQz1pim7V57KbUxlRZtxAgQIBAjwX8j6DHk2/oBAgQ6IjALRnHZ1PHpY5ZYkxPymM3\npralyvri5cQ8cPfUP6S2L37SfQIECBDol4CA1K/5NloCBAh0VaCEm7KcunCz87/rsvbtqfL8\nP6WemFqTai6PG9z5++aD1gkQIECgnwICUj/n3agJECDQNYGPDQa0OCA9Oo+Xo0Pl+RKAjkid\nlGoupw/uCEhNFesECBAgQIAAAQIECLRWYC4935T6/KIR/Grul88fldPvHjNYf3luh0s5mnR9\n6gvDB9wSIECAAAECBAgQIECgCwIfyiDuSN2tMZjPZf3fB/fLlVu/lvrU4H65eWiqBKg3lDsW\nAgQIECDgFDvvAQIECBDoikD5nFEJQeW0urIcmXpk6qPlTpZykYZyqt2jUuXS4GXx+aMFB/8l\nQIAAgYGAgOStQIAAAQJdESgBqSynLdxUZ+S2nEI3DEjl4bJeQtRwm/L5oy2pc1MWAgQIECBA\ngAABAgQIdEaghKFrU+cMRvTO3G5OHTC4X27KZ5HKKXWvLneyXJ0aBqsdD/gPAQIECBAgQIAA\nAQIEuiLwrgykfC9SOUp0XWqpK9NdmsfLqXbHp0pY+pmUhQABAgQI7BBwip03AgECBAh0SaAc\nDTo49fRUuaR38/S63N2xlMdOTvn80YKH/xIgQIAAAQIECBAg0FGB4Sl052d85ehQuUrd4uU7\n8kB5rmxzTWrxF8fmIQsBAgQIECBAgAABAgS6IfDFDKMEoP/ezXAOzOPls0llmz/bzTYeJkCA\nAIGeCjjFrqcTb9gECBDosMDwogtLnV5Xhn1b6rzB+Jf6jNLgKTcECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAA\nAQIECBAgQIAAAQIdEvj/Xb73bmYBBpQAAAAASUVORK5CYII=",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "interaction.plot(W, D, logDays, type='b', col=c('red',\n",
    "                  'blue'), lwd=2, pch=c(23,24))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "When these broken lines are not parallel, there is evidence of an interaction.\n",
    "The one thing missing from this plot are errorbars. The above broken lines\n",
    "are clearly not parallel but there is measurement error. If the\n",
    "error bars were large then we might consider there to be no interaction, otherwise we might."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Parameterization\n",
    "\n",
    "-   Many constraints are needed, again for identifiability. Let’s not\n",
    "    worry too much about the details\n",
    "\n",
    "-   Constraints:\n",
    "\n",
    "    -   $\\sum_{i=1}^r \\alpha_i = 0$\n",
    "\n",
    "    -   $\\sum_{j=1}^m \\beta_j = 0$\n",
    "\n",
    "    -   $\\sum_{j=1}^m (\\alpha\\beta)_{ij} = 0, 1 \\leq i \\leq r$\n",
    "\n",
    "    -   $\\sum_{i=1}^r (\\alpha\\beta)_{ij} = 0, 1 \\leq j \\leq m.$\n",
    "\n",
    "- We should convince ourselves that we know have exactly $r*m$ free parameters."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Fitting the model\n",
    "\n",
    "-   Easy to fit when $n_{ij}=n$ (balanced)\n",
    "    $$\\widehat{Y}_{ijk}= \\overline{Y}_{ij\\cdot} = \\frac{1}{n}\\sum_{k=1}^{n} Y_{ijk}.$$\n",
    "\n",
    "-   Inference for combinations\n",
    "    $$\\text{Var} \\left(\\sum_{i=1}^r \\sum_{j=1}^m a_{ij} \\overline{Y}_{ij\\cdot}\\right) = \\frac{ \\sigma^2}{n} \\cdot \\sum_{i=1}^r \\sum_{j=1}^m{a_{ij}^2}.$$\n",
    "\n",
    "-   Usual $t$-tests, confidence intervals.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "Call:\n",
       "lm(formula = logDays ~ D * W)\n",
       "\n",
       "Residuals:\n",
       "     Min       1Q   Median       3Q      Max \n",
       "-1.33772 -0.51121  0.06302  0.62926  1.17950 \n",
       "\n",
       "Coefficients:\n",
       "            Estimate Std. Error t value Pr(>|t|)    \n",
       "(Intercept)   1.0212     0.2317   4.407 5.01e-05 ***\n",
       "D2           -0.1042     0.3277  -0.318   0.7517    \n",
       "W2            0.8439     0.3277   2.575   0.0128 *  \n",
       "W3            1.5271     0.3277   4.661 2.10e-05 ***\n",
       "D2:W2        -0.4231     0.4634  -0.913   0.3653    \n",
       "D2:W3        -0.4491     0.4634  -0.969   0.3368    \n",
       "---\n",
       "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
       "\n",
       "Residual standard error: 0.7327 on 54 degrees of freedom\n",
       "Multiple R-squared:  0.4076,\tAdjusted R-squared:  0.3528 \n",
       "F-statistic: 7.431 on 5 and 54 DF,  p-value: 2.301e-05\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "kidney.lm = lm(logDays ~ D*W)\n",
    "summary(kidney.lm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Example\n",
    "\n",
    "* Suppose we are interested in comparing the mean in $(D=1,W=3)$ and $(D=2,W=2)$\n",
    "groups. The difference is\n",
    "$$\n",
    "E(\\bar{Y}_{13\\cdot}-\\bar{Y}_{22\\cdot})\n",
    "$$\n",
    "\n",
    "* By independence, its variance is \n",
    "$$\\text{Var}(\\bar{Y}_{13\\cdot}) + \\text{Var}(\\bar{Y}_{22\\cdot}) = \\frac{2 \\sigma^2}{n}.\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       1        2 \n",
      "2.548271 1.337719 \n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>fit</th><th scope=col>lower</th><th scope=col>upper</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>1.210551 </td><td>0.5536058</td><td>1.867497 </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lll}\n",
       " fit & lower & upper\\\\\n",
       "\\hline\n",
       "\t 1.210551  & 0.5536058 & 1.867497 \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  fit      lower     upper   \n",
       "1 1.210551 0.5536058 1.867497"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "estimates = predict(kidney.lm, list(D=factor(c(1,2)), W=factor(c(3,2))))\n",
    "print(estimates)\n",
    "sigma.hat = 0.7327 # from table above\n",
    "n = 10 # ten observations per group\n",
    "fit = estimates[1] - estimates[2]\n",
    "upper = fit + qt(0.975, 54) * sqrt(2 * sigma.hat^2 / n)\n",
    "lower = fit - qt(0.975 ,54) * sqrt(2 * sigma.hat^2 / n)\n",
    "data.frame(fit,lower,upper)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>(Intercept)</th><th scope=col>D2</th><th scope=col>W2</th><th scope=col>W3</th><th scope=col>D2:W2</th><th scope=col>D2:W3</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|llllll}\n",
       "  & (Intercept) & D2 & W2 & W3 & D2:W2 & D2:W3\\\\\n",
       "\\hline\n",
       "\t1 & 1 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t2 & 1 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t3 & 1 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t4 & 1 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t5 & 1 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t6 & 1 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "1. 1\n",
       "2. 1\n",
       "3. 1\n",
       "4. 1\n",
       "5. 1\n",
       "6. 1\n",
       "7. 0\n",
       "8. 0\n",
       "9. 0\n",
       "10. 0\n",
       "11. 0\n",
       "12. 0\n",
       "13. 0\n",
       "14. 0\n",
       "15. 0\n",
       "16. 0\n",
       "17. 0\n",
       "18. 0\n",
       "19. 0\n",
       "20. 0\n",
       "21. 0\n",
       "22. 0\n",
       "23. 0\n",
       "24. 0\n",
       "25. 0\n",
       "26. 0\n",
       "27. 0\n",
       "28. 0\n",
       "29. 0\n",
       "30. 0\n",
       "31. 0\n",
       "32. 0\n",
       "33. 0\n",
       "34. 0\n",
       "35. 0\n",
       "36. 0\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "  (Intercept) D2 W2 W3 D2:W2 D2:W3\n",
       "1 1           0  0  0  0     0    \n",
       "2 1           0  0  0  0     0    \n",
       "3 1           0  0  0  0     0    \n",
       "4 1           0  0  0  0     0    \n",
       "5 1           0  0  0  0     0    \n",
       "6 1           0  0  0  0     0    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "head(model.matrix(kidney.lm))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Finding predicted values\n",
    "\n",
    "The most direct way to compute predicted values is using the `predict` function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>fit</th><th scope=col>lwr</th><th scope=col>upr</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>1.021156 </td><td>0.5566306</td><td>1.485681 </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lll}\n",
       "  & fit & lwr & upr\\\\\n",
       "\\hline\n",
       "\t1 & 1.021156  & 0.5566306 & 1.485681 \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "1. 1.02115603146356\n",
       "2. 0.556630649339576\n",
       "3. 1.48568141358755\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "  fit      lwr       upr     \n",
       "1 1.021156 0.5566306 1.485681"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "predict(kidney.lm, list(D=factor(1),W=factor(1)), interval='confidence')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### ANOVA table\n",
    "\n",
    "In the balanced case, everything can again be summarized\n",
    "from the ANOVA table\n",
    "\n",
    "<table>\n",
    "<tr><td>Source</td><td width=\"400\">SS</td><td width=\"100\">df</td><td width=\"200\">$\\mathbb{E}(MS)$</td></tr>\n",
    "<tr><td>A</td><td>$SSA=nm\\sum_{i=1}^r  \\left(\\overline{Y}_{i\\cdot\\cdot} - \\overline{Y}_{\\cdot\\cdot\\cdot}\\right)^2$</td><td>r-1</td><td>$\\sigma^2 + nm\\frac{\\sum_{i=1}^r \\alpha_i^2}{r-1}$</td></tr>\n",
    "<tr><td>B</td><td>$SSB=nr\\sum_{j=1}^m  \\left(\\overline{Y}_{\\cdot j\\cdot} - \\overline{Y}_{\\cdot\\cdot\\cdot}\\right)^2$</td>\n",
    "<td>m-1</td><td>$\\sigma^2 + nr\\frac{\\sum_{j=1}^m \\beta_j^2}{m-1}$</td></tr>\n",
    "<tr><td>A:B</td><td>$SSAB = n\\sum_{i=1}^r \\sum_{j=1}^m  \\left(\\overline{Y}_{ij\\cdot} - \\overline{Y}_{i\\cdot\\cdot} - \\overline{Y}_{\\cdot j\\cdot} + \\overline{Y}_{\\cdot\\cdot\\cdot}\\right)^2$</td>\n",
    "<td>(m-1)(r-1)</td><td>$\\sigma^2 + n\\frac{\\sum_{i=1}^r\\sum_{j=1}^m (\\alpha\\beta)_{ij}^2}{(r-1)(m-1)}$</td></tr>\n",
    "<tr><td>Error</td><td>$SSE = \\sum_{i=1}^r \\sum_{j=1}^m \\sum_{k=1}^{n}(Y_{ijk} - \\overline{Y}_{ij\\cdot})^2$</td>\n",
    "<td>(n-1)mr</td><td>$\\sigma^2$</td></tr>\n",
    "</table>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Tests using the ANOVA table\n",
    "\n",
    "* Rows of the ANOVA table can be used to test various\n",
    "of the hypotheses we started out with.\n",
    "\n",
    "* For instance, we see that under\n",
    "  $H_0:(\\alpha\\beta)_{ij}=0, \\forall i,j$ the expected value of $SSAB$\n",
    "  and $SSE$ is $\\sigma^2$ – use these for an $F$-test testing for an\n",
    "  interaction.\n",
    "  \n",
    "- Under $H_0$\n",
    "    $$F = \\frac{MSAB}{MSE} = \\frac{\\frac{SSAB}{(m-1)(r-1)}}{\\frac{SSE}{(n-1)mr}} \\sim F_{(m-1)(r-1), (n-1)mr}$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>Df</th><th scope=col>Sum Sq</th><th scope=col>Mean Sq</th><th scope=col>F value</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>D</th><td> 1          </td><td> 2.3396928  </td><td>2.3396928   </td><td> 4.3582928  </td><td>4.156170e-02</td></tr>\n",
       "\t<tr><th scope=row>W</th><td> 2          </td><td>16.9712909  </td><td>8.4856454   </td><td>15.8067448  </td><td>3.944502e-06</td></tr>\n",
       "\t<tr><th scope=row>D:W</th><td> 2          </td><td> 0.6356584  </td><td>0.3178292   </td><td> 0.5920404  </td><td>5.567479e-01</td></tr>\n",
       "\t<tr><th scope=row>Residuals</th><td>54          </td><td>28.9891979  </td><td>0.5368370   </td><td>        NA  </td><td>          NA</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lllll}\n",
       "  & Df & Sum Sq & Mean Sq & F value & Pr(>F)\\\\\n",
       "\\hline\n",
       "\tD &  1           &  2.3396928   & 2.3396928    &  4.3582928   & 4.156170e-02\\\\\n",
       "\tW &  2           & 16.9712909   & 8.4856454    & 15.8067448   & 3.944502e-06\\\\\n",
       "\tD:W &  2           &  0.6356584   & 0.3178292    &  0.5920404   & 5.567479e-01\\\\\n",
       "\tResiduals & 54           & 28.9891979   & 0.5368370    &         NA   &           NA\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "          Df Sum Sq     Mean Sq   F value    Pr(>F)      \n",
       "D          1  2.3396928 2.3396928  4.3582928 4.156170e-02\n",
       "W          2 16.9712909 8.4856454 15.8067448 3.944502e-06\n",
       "D:W        2  0.6356584 0.3178292  0.5920404 5.567479e-01\n",
       "Residuals 54 28.9891979 0.5368370         NA           NA"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "anova(kidney.lm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "We can also test for interactions using our usual approach\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Res.Df</th><th scope=col>RSS</th><th scope=col>Df</th><th scope=col>Sum of Sq</th><th scope=col>F</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>56       </td><td>29.62486 </td><td>NA       </td><td>       NA</td><td>       NA</td><td>       NA</td></tr>\n",
       "\t<tr><td>54       </td><td>28.98920 </td><td> 2       </td><td>0.6356584</td><td>0.5920404</td><td>0.5567479</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|llllll}\n",
       " Res.Df & RSS & Df & Sum of Sq & F & Pr(>F)\\\\\n",
       "\\hline\n",
       "\t 56        & 29.62486  & NA        &        NA &        NA &        NA\\\\\n",
       "\t 54        & 28.98920  &  2        & 0.6356584 & 0.5920404 & 0.5567479\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  Res.Df RSS      Df Sum of Sq F         Pr(>F)   \n",
       "1 56     29.62486 NA        NA        NA        NA\n",
       "2 54     28.98920  2 0.6356584 0.5920404 0.5567479"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "anova(lm(logDays ~ D + W, kidney.table), kidney.lm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Some caveats about `R` formulae\n",
    "\n",
    "While we see that it is straightforward to form the\n",
    "interactions test using our usual `anova` function approach, we generally\n",
    "*cannot* test for main effects by this approach. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Res.Df</th><th scope=col>RSS</th><th scope=col>Df</th><th scope=col>Sum of Sq</th><th scope=col>F</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>54          </td><td>28.9892     </td><td>NA          </td><td>          NA</td><td>NA          </td><td>NA          </td></tr>\n",
       "\t<tr><td>54          </td><td>28.9892     </td><td> 0          </td><td>3.552714e-15</td><td>NA          </td><td>NA          </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|llllll}\n",
       " Res.Df & RSS & Df & Sum of Sq & F & Pr(>F)\\\\\n",
       "\\hline\n",
       "\t 54           & 28.9892      & NA           &           NA & NA           & NA          \\\\\n",
       "\t 54           & 28.9892      &  0           & 3.552714e-15 & NA           & NA          \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  Res.Df RSS     Df Sum of Sq    F  Pr(>F)\n",
       "1 54     28.9892 NA           NA NA NA    \n",
       "2 54     28.9892  0 3.552714e-15 NA NA    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "lm_no_main_Weight = lm(logDays ~ D + W:D)\n",
    "anova(lm_no_main_Weight, kidney.lm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "In fact, these models are identical in terms of their *planes* or their\n",
    "*fitted values*. What has happened is that `R` has\n",
    "formed a different design matrix using its rules for `formula` objects."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Res.Df</th><th scope=col>RSS</th><th scope=col>Df</th><th scope=col>Sum of Sq</th><th scope=col>F</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>54          </td><td>28.9892     </td><td>NA          </td><td>          NA</td><td>NA          </td><td>NA          </td></tr>\n",
       "\t<tr><td>54          </td><td>28.9892     </td><td> 0          </td><td>3.552714e-15</td><td>NA          </td><td>NA          </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|llllll}\n",
       " Res.Df & RSS & Df & Sum of Sq & F & Pr(>F)\\\\\n",
       "\\hline\n",
       "\t 54           & 28.9892      & NA           &           NA & NA           & NA          \\\\\n",
       "\t 54           & 28.9892      &  0           & 3.552714e-15 & NA           & NA          \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  Res.Df RSS     Df Sum of Sq    F  Pr(>F)\n",
       "1 54     28.9892 NA           NA NA NA    \n",
       "2 54     28.9892  0 3.552714e-15 NA NA    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "lm1 = lm(logDays ~ D + W:D)\n",
    "lm2 = lm(logDays ~ D + W:D + W)\n",
    "anova(lm1, lm2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## ANOVA tables in general\n",
    "\n",
    "So far, we have used `anova` to compare two models. In this section,\n",
    "we produced tables for just 1 model. This also works for\n",
    "*any* regression model, though we have to be a little careful\n",
    "about interpretation.\n",
    "\n",
    "Let's revisit the job aptitude test data from last section."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "Call:\n",
       "lm(formula = JPERF ~ TEST * ETHN, data = jobtest.table)\n",
       "\n",
       "Residuals:\n",
       "    Min      1Q  Median      3Q     Max \n",
       "-2.0734 -1.0594 -0.2548  1.2830  2.1980 \n",
       "\n",
       "Coefficients:\n",
       "            Estimate Std. Error t value Pr(>|t|)  \n",
       "(Intercept)   2.0103     1.0501   1.914   0.0736 .\n",
       "TEST          1.3134     0.6704   1.959   0.0677 .\n",
       "ETHN1        -1.9132     1.5403  -1.242   0.2321  \n",
       "TEST:ETHN1    1.9975     0.9544   2.093   0.0527 .\n",
       "---\n",
       "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
       "\n",
       "Residual standard error: 1.407 on 16 degrees of freedom\n",
       "Multiple R-squared:  0.6643,\tAdjusted R-squared:  0.6013 \n",
       "F-statistic: 10.55 on 3 and 16 DF,  p-value: 0.0004511\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "url = 'http://stats191.stanford.edu/data/jobtest.table'\n",
    "jobtest.table <- read.table(url, header=T)\n",
    "jobtest.table$ETHN <- factor(jobtest.table$ETHN)\n",
    "jobtest.lm = lm(JPERF ~ TEST * ETHN, jobtest.table)\n",
    "summary(jobtest.lm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "Now, let's look at the `anova` output. We'll see the results don't match."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>Df</th><th scope=col>Sum Sq</th><th scope=col>Mean Sq</th><th scope=col>F value</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>TEST</th><td> 1          </td><td>48.722958   </td><td>48.722958   </td><td>24.626621   </td><td>0.0001411547</td></tr>\n",
       "\t<tr><th scope=row>ETHN</th><td> 1          </td><td> 5.246751   </td><td> 5.246751   </td><td> 2.651927   </td><td>0.1229523805</td></tr>\n",
       "\t<tr><th scope=row>TEST:ETHN</th><td> 1          </td><td> 8.666073   </td><td> 8.666073   </td><td> 4.380196   </td><td>0.0526501180</td></tr>\n",
       "\t<tr><th scope=row>Residuals</th><td>16          </td><td>31.655473   </td><td> 1.978467   </td><td>       NA   </td><td>          NA</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lllll}\n",
       "  & Df & Sum Sq & Mean Sq & F value & Pr(>F)\\\\\n",
       "\\hline\n",
       "\tTEST &  1           & 48.722958    & 48.722958    & 24.626621    & 0.0001411547\\\\\n",
       "\tETHN &  1           &  5.246751    &  5.246751    &  2.651927    & 0.1229523805\\\\\n",
       "\tTEST:ETHN &  1           &  8.666073    &  8.666073    &  4.380196    & 0.0526501180\\\\\n",
       "\tResiduals & 16           & 31.655473    &  1.978467    &        NA    &           NA\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "          Df Sum Sq    Mean Sq   F value   Pr(>F)      \n",
       "TEST       1 48.722958 48.722958 24.626621 0.0001411547\n",
       "ETHN       1  5.246751  5.246751  2.651927 0.1229523805\n",
       "TEST:ETHN  1  8.666073  8.666073  4.380196 0.0526501180\n",
       "Residuals 16 31.655473  1.978467        NA           NA"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "anova(jobtest.lm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "The difference is how the `Sum Sq` columns is created. In the `anova` output, terms in the\n",
    "response are added sequentially.\n",
    "\n",
    "We can see this by comparing these two models directly. The `F` statistic doesn't agree\n",
    "because the `MSE` above is computed in the *fullest* model, but the `Sum of Sq` is correct."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Res.Df</th><th scope=col>RSS</th><th scope=col>Df</th><th scope=col>Sum of Sq</th><th scope=col>F</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>18       </td><td>45.56830 </td><td>NA       </td><td>      NA </td><td>      NA </td><td>       NA</td></tr>\n",
       "\t<tr><td>17       </td><td>40.32155 </td><td> 1       </td><td>5.246751 </td><td>2.212087 </td><td>0.1552463</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|llllll}\n",
       " Res.Df & RSS & Df & Sum of Sq & F & Pr(>F)\\\\\n",
       "\\hline\n",
       "\t 18        & 45.56830  & NA        &       NA  &       NA  &        NA\\\\\n",
       "\t 17        & 40.32155  &  1        & 5.246751  & 2.212087  & 0.1552463\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  Res.Df RSS      Df Sum of Sq F        Pr(>F)   \n",
       "1 18     45.56830 NA       NA        NA        NA\n",
       "2 17     40.32155  1 5.246751  2.212087 0.1552463"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "anova(lm(JPERF ~ TEST, jobtest.table), lm(JPERF ~ TEST + ETHN, jobtest.table))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "Similarly, the first `Sum Sq` in `anova` can be found by:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Res.Df</th><th scope=col>RSS</th><th scope=col>Df</th><th scope=col>Sum of Sq</th><th scope=col>F</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>19          </td><td>94.29126    </td><td>NA          </td><td>      NA    </td><td>      NA    </td><td>          NA</td></tr>\n",
       "\t<tr><td>18          </td><td>45.56830    </td><td> 1          </td><td>48.72296    </td><td>19.24613    </td><td>0.0003555104</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|llllll}\n",
       " Res.Df & RSS & Df & Sum of Sq & F & Pr(>F)\\\\\n",
       "\\hline\n",
       "\t 19           & 94.29126     & NA           &       NA     &       NA     &           NA\\\\\n",
       "\t 18           & 45.56830     &  1           & 48.72296     & 19.24613     & 0.0003555104\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  Res.Df RSS      Df Sum of Sq F        Pr(>F)      \n",
       "1 19     94.29126 NA       NA        NA           NA\n",
       "2 18     45.56830  1 48.72296  19.24613 0.0003555104"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "anova(lm(JPERF ~ 1, jobtest.table), lm(JPERF ~ TEST, jobtest.table))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "There are ways to produce an *ANOVA* table whose $p$-values agree with\n",
    "`summary`. This is done by an ANOVA table that uses Type-III sum of squares."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message:\n",
      "“package ‘car’ was built under R version 3.3.2”"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>Sum Sq</th><th scope=col>Df</th><th scope=col>F value</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>(Intercept)</th><td> 7.250560 </td><td> 1        </td><td>3.664736  </td><td>0.07363289</td></tr>\n",
       "\t<tr><th scope=row>TEST</th><td> 7.594407 </td><td> 1        </td><td>3.838531  </td><td>0.06774914</td></tr>\n",
       "\t<tr><th scope=row>ETHN</th><td> 3.052180 </td><td> 1        </td><td>1.542699  </td><td>0.23211490</td></tr>\n",
       "\t<tr><th scope=row>TEST:ETHN</th><td> 8.666073 </td><td> 1        </td><td>4.380196  </td><td>0.05265012</td></tr>\n",
       "\t<tr><th scope=row>Residuals</th><td>31.655473 </td><td>16        </td><td>      NA  </td><td>        NA</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|llll}\n",
       "  & Sum Sq & Df & F value & Pr(>F)\\\\\n",
       "\\hline\n",
       "\t(Intercept) &  7.250560  &  1         & 3.664736   & 0.07363289\\\\\n",
       "\tTEST &  7.594407  &  1         & 3.838531   & 0.06774914\\\\\n",
       "\tETHN &  3.052180  &  1         & 1.542699   & 0.23211490\\\\\n",
       "\tTEST:ETHN &  8.666073  &  1         & 4.380196   & 0.05265012\\\\\n",
       "\tResiduals & 31.655473  & 16         &       NA   &         NA\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "            Sum Sq    Df F value  Pr(>F)    \n",
       "(Intercept)  7.250560  1 3.664736 0.07363289\n",
       "TEST         7.594407  1 3.838531 0.06774914\n",
       "ETHN         3.052180  1 1.542699 0.23211490\n",
       "TEST:ETHN    8.666073  1 4.380196 0.05265012\n",
       "Residuals   31.655473 16       NA         NA"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(car)\n",
    "Anova(jobtest.lm, type=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "Call:\n",
       "lm(formula = JPERF ~ TEST * ETHN, data = jobtest.table)\n",
       "\n",
       "Residuals:\n",
       "    Min      1Q  Median      3Q     Max \n",
       "-2.0734 -1.0594 -0.2548  1.2830  2.1980 \n",
       "\n",
       "Coefficients:\n",
       "            Estimate Std. Error t value Pr(>|t|)  \n",
       "(Intercept)   2.0103     1.0501   1.914   0.0736 .\n",
       "TEST          1.3134     0.6704   1.959   0.0677 .\n",
       "ETHN1        -1.9132     1.5403  -1.242   0.2321  \n",
       "TEST:ETHN1    1.9975     0.9544   2.093   0.0527 .\n",
       "---\n",
       "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
       "\n",
       "Residual standard error: 1.407 on 16 degrees of freedom\n",
       "Multiple R-squared:  0.6643,\tAdjusted R-squared:  0.6013 \n",
       "F-statistic: 10.55 on 3 and 16 DF,  p-value: 0.0004511\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "summary(jobtest.lm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Fixed and random effects\n",
    "\n",
    "-   In kidney & rehab examples, the categorical variables are\n",
    "    well-defined categories: below average fitness, long duration, etc.\n",
    "\n",
    "-   In some designs, the categorical variable is “subject”.\n",
    "\n",
    "-   Simplest example: repeated measures, where more than one (identical)\n",
    "    measurement is taken on the same individual.\n",
    "\n",
    "-   In this case, the “group” effect $\\alpha_i$ is best thought of as\n",
    "    random because we only sample a subset of the entire population.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### When to use random effects?\n",
    "\n",
    "-   A “group” effect is random if we can think of the levels we observe\n",
    "    in that group to be samples from a larger population.\n",
    "\n",
    "-   Example: if collecting data from different medical centers, “center”\n",
    "    might be thought of as random.\n",
    "\n",
    "-   Example: if surveying students on different campuses, “campus” may\n",
    "    be a random effect.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Example: sodium content in beer\n",
    "\n",
    "-   How much sodium is there in North American beer? How much does this\n",
    "    vary by brand?\n",
    "\n",
    "-   Observations: for 6 brands of beer, we recorded the sodium content\n",
    "    of 8 12 ounce bottles.\n",
    "\n",
    "-   Questions of interest: what is the “grand mean” sodium content? How\n",
    "    much variability is there from brand to brand?\n",
    "\n",
    "-   “Individuals” in this case are brands, repeated measures are the 8\n",
    "    bottles.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>Df</th><th scope=col>Sum Sq</th><th scope=col>Mean Sq</th><th scope=col>F value</th><th scope=col>Pr(&gt;F)</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>brand</th><td> 5          </td><td>854.5292    </td><td>170.9058333 </td><td>238.7112    </td><td>1.083746e-29</td></tr>\n",
       "\t<tr><th scope=row>Residuals</th><td>42          </td><td> 30.0700    </td><td>  0.7159524 </td><td>      NA    </td><td>          NA</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lllll}\n",
       "  & Df & Sum Sq & Mean Sq & F value & Pr(>F)\\\\\n",
       "\\hline\n",
       "\tbrand &  5           & 854.5292     & 170.9058333  & 238.7112     & 1.083746e-29\\\\\n",
       "\tResiduals & 42           &  30.0700     &   0.7159524  &       NA     &           NA\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "          Df Sum Sq   Mean Sq     F value  Pr(>F)      \n",
       "brand      5 854.5292 170.9058333 238.7112 1.083746e-29\n",
       "Residuals 42  30.0700   0.7159524       NA           NA"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "url = 'http://stats191.stanford.edu/data/sodium.table'\n",
    "sodium.table = read.table(url, header=T)\n",
    "sodium.table$brand = factor(sodium.table$brand)\n",
    "sodium.lm = lm(sodium ~ brand, sodium.table)\n",
    "anova(sodium.lm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### One-way random effects model\n",
    "\n",
    "-   Assuming that cell-sizes are the same, i.e. equal observations for\n",
    "    each “subject” (brand of beer).\n",
    "\n",
    "-   Observations\n",
    "    $$Y_{ij} \\sim \\mu+ \\alpha_i + \\varepsilon_{ij}, 1 \\leq i \\leq r, 1 \\leq j \\leq n$$\n",
    "\n",
    "-   $\\varepsilon_{ij} \\sim N(0, \\sigma^2_{\\epsilon}), 1 \\leq i \\leq r, 1 \\leq j \\leq n$\n",
    "\n",
    "-   $\\alpha_i \\sim N(0, \\sigma^2_{\\alpha}), 1 \\leq  i \\leq r.$\n",
    "\n",
    "-   Parameters:\n",
    "\n",
    "    -   $\\mu$ is the population mean;\n",
    "\n",
    "    -   $\\sigma^2_{\\epsilon}$ is the measurement variance (i.e. how variable are\n",
    "        the readings from the machine that reads the sodium content?);\n",
    "\n",
    "    -   $\\sigma^2_{\\alpha}$ is the population variance (i.e. how variable\n",
    "\tis the sodium content of beer across brands)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Modelling the variance\n",
    "\n",
    "- In random effects model, the observations are no longer independent (even if $\\varepsilon$'s are independent\n",
    "   $$                                                                                                                                         \n",
    "   {\\rm Cov}(Y_{ij}, Y_{i'j'}) = \\left(\\sigma^2_{\\alpha}  + \\sigma^2_{\\epsilon} \\delta_{j,j'} \\right) \\delta_{i,i'}.$$\n",
    "\n",
    "- In more complicated models, this makes ``maximum likelihood estimation'' more complicated: least squares is no longer the best solution. \n",
    "\n",
    "- **It's no longer a plane!**\n",
    "\n",
    "\n",
    "- This model has a very simple model for the *mean*, it just has a slightly\n",
    "more complex model for the *variance*.\n",
    "\n",
    "- Shortly we'll see other more complex models of the variance:\n",
    "    - Weighted Least Squares\n",
    "    - Correlated Errors"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Fitting the model\n",
    "\n",
    "The *MLE (Maximum Likelihood Estimator)* is found by minimizing\n",
    "$$\n",
    "\\begin{aligned}\n",
    "-2 \\log \\ell (\\mu, \\sigma^2_{\\epsilon}, \\sigma^2_{\\alpha}|Y) &= \\sum_{i=1}^r \\biggl[ (Y_i - \\mu)^T (\\sigma^2_{\\epsilon} I_{n_i \\times n_i} + \\sigma^2_{\\alpha} 11^T)^{-1} (Y_i - \\mu) \\\\\n",
    "& \\qquad + \\log \\left( \\det(\\sigma^2_{\\epsilon} I_{n_i \\times n_i} + \\sigma^2_{\\alpha} 11^T) \\right) \\biggr].\n",
    "\\end{aligned}\n",
    "$$\n",
    "\n",
    "THe function $\\ell(\\mu, \\sigma^2_{\\epsilon}, \\sigma^2_{\\alpha})$ is called the *likelihood function*."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Fitting the model in balanced design\n",
    "\n",
    "Only one parameter in the mean function $\\mu.$\n",
    "- When cell sizes are the same (balanced),\n",
    "   $$                                                                           \n",
    "   \\widehat{\\mu} = \\overline{Y}_{\\cdot \\cdot} = \\frac{1}{nr} \\sum_{i,j} Y_{ij}.$$\n",
    "Unbalanced models: use numerical optimizer.\n",
    "\n",
    "- This also changes estimates of $\\sigma^2_{\\epsilon}$ -- see ANOVA table. We\n",
    " might guess that $df=nr-1$ and\n",
    "   $$                                                                           \n",
    "   \\widehat{\\sigma}^2 = \\frac{1}{nr-1} \\sum_{i,j} (Y_{ij} - \\overline{Y}_{\\cdot\\cdot})^2.$$\n",
    "   **This is not correct.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Linear mixed-effects model fit by REML\n",
       " Data: sodium.table \n",
       "      AIC      BIC    logLik\n",
       "  154.923 160.4735 -74.46152\n",
       "\n",
       "Random effects:\n",
       " Formula: ~1 | brand\n",
       "        (Intercept)  Residual\n",
       "StdDev:    4.612346 0.8461397\n",
       "\n",
       "Fixed effects: sodium ~ 1 \n",
       "               Value Std.Error DF  t-value p-value\n",
       "(Intercept) 17.62917  1.886939 42 9.342733       0\n",
       "\n",
       "Standardized Within-Group Residuals:\n",
       "        Min          Q1         Med          Q3         Max \n",
       "-1.90551291 -0.68337933  0.08232268  0.79246858  1.64968961 \n",
       "\n",
       "Number of Observations: 48\n",
       "Number of Groups: 6 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(nlme)\n",
    "sodium.lme = lme(fixed=sodium~1,random=~1|brand, data=sodium.table)\n",
    "summary(sodium.lme)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "For reasons I'm not sure of, the degrees of freedom don't agree with our\n",
    "ANOVA, though we do find the correct `SE` for our estimate of $\\mu$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "1.88693884226396"
      ],
      "text/latex": [
       "1.88693884226396"
      ],
      "text/markdown": [
       "1.88693884226396"
      ],
      "text/plain": [
       "[1] 1.886939"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "MSTR = anova(sodium.lm)$Mean[1]\n",
    "sqrt(MSTR/48)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "The intervals formed by `lme` use the 42 degrees of freedom, but \n",
    "are otherwise the same:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Approximate 95% confidence intervals\n",
       "\n",
       " Fixed effects:\n",
       "               lower     est.    upper\n",
       "(Intercept) 13.82117 17.62917 21.43716\n",
       "attr(,\"label\")\n",
       "[1] \"Fixed effects:\"\n",
       "\n",
       " Random Effects:\n",
       "  Level: brand \n",
       "                   lower     est.    upper\n",
       "sd((Intercept)) 2.475221 4.612346 8.594683\n",
       "\n",
       " Within-group standard error:\n",
       "    lower      est.     upper \n",
       "0.6832445 0.8461397 1.0478715 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "intervals(sodium.lme)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>lwr</th><th scope=col>center</th><th scope=col>upr</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>13.82117</td><td>17.62917</td><td>21.43716</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lll}\n",
       " lwr & center & upr\\\\\n",
       "\\hline\n",
       "\t 13.82117 & 17.62917 & 21.43716\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  lwr      center   upr     \n",
       "1 13.82117 17.62917 21.43716"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "center = mean(sodium.table$sodium)\n",
    "lwr = center - sqrt(MSTR / 48) * qt(0.975,42)\n",
    "upr = center + sqrt(MSTR / 48) * qt(0.975,42)\n",
    "data.frame(lwr, center, upr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "Using our degrees of freedom as 7 yields slightly wider intervals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>lwr</th><th scope=col>center</th><th scope=col>upr</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>13.16727</td><td>17.62917</td><td>22.09107</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lll}\n",
       " lwr & center & upr\\\\\n",
       "\\hline\n",
       "\t 13.16727 & 17.62917 & 22.09107\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "  lwr      center   upr     \n",
       "1 13.16727 17.62917 22.09107"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "center = mean(sodium.table$sodium)\n",
    "lwr = center - sqrt(MSTR / 48) * qt(0.975,7)\n",
    "upr = center + sqrt(MSTR / 48) * qt(0.975,7)\n",
    "data.frame(lwr, center, upr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### ANOVA table\n",
    "\n",
    "Again, the information needed can be summarized in an\n",
    "ANOVA table.\n",
    "\n",
    "<table>\n",
    "<tr><td>Source</td><td width=\"300\">SS</td><td width=\"100\">df</td><td width=\"100\">$\\mathbb{E}(MS)$</td></tr>\n",
    "<tr><td>Treatment</td><td>$SSTR=\\sum_{i=1}^r n_i \\left(\\overline{Y}_{i\\cdot} - \\overline{Y}_{\\cdot\\cdot}\\right)^2$</td><td>r-1</td><td>$\\sigma^2_{\\epsilon} + n \\sigma^2_{\\alpha}$</td></tr>\n",
    "<tr><td>Error</td><td>$SSE=\\sum_{i=1}^r \\sum_{j=1}^{n_i}(Y_{ij} - \\overline{Y}_{i\\cdot})^2$</td>\n",
    "<td>$\\sum_{i=1}^r (n_i - 1)$</td><td>$\\sigma^2_{\\epsilon}$</td></tr>\n",
    "</table>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "- ANOVA table is still useful to setup tests: the same $F$ statistics for fixed or random will work here.\n",
    "\n",
    "- Test for random effect: $H_0:\\sigma^2_{\\alpha}=0$ based on\n",
    "   $$\n",
    "   F = \\frac{MSTR}{MSE} \\sim F_{r-1, (n-1)r} \\qquad \\text{under $H_0$}.$$\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Inference for $\\mu$\n",
    "\n",
    "- Easy to check that\n",
    "   $$\n",
    "   \\begin{aligned}\n",
    "   E(\\overline{Y}_{\\cdot \\cdot}) &= \\mu   \\\\\n",
    "   \\text{Var}(\\overline{Y}_{\\cdot \\cdot}) &= \\frac{\\sigma^2_{\\epsilon} + n\\sigma^2_{\\alpha}}{rn}.\n",
    "   \\end{aligned}\n",
    "   $$\n",
    "\n",
    "- To come up with a $t$ statistic that we can use for test, CIs, we\n",
    "   need to find an estimate of $\\text{Var}(\\overline{Y}_{\\cdot \\cdot})$.\n",
    "  \n",
    "  \n",
    "- ANOVA table says $E(MSTR) = n\\sigma^2_{\\alpha}+\\sigma^2_{\\epsilon}$ which suggests\n",
    "   $$                                                                           \n",
    "   \\frac{\\overline{Y}_{\\cdot \\cdot} - \\mu_{\\cdot}}{\\sqrt{\\frac{MSTR}{rn}}} \\sim t_{r-1}.$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Degrees of freedom\n",
    "\n",
    "- Why $r-1$ degrees of freedom?\n",
    " \n",
    "- Imagine we could record an infinite number of observations for each individu\\\n",
    "al, so that $\\overline{Y}_{i\\cdot} \\rightarrow \\mu + \\alpha_i$.\n",
    "\n",
    "- To learn anything about $\\mu_{\\cdot}$ we still only have $r$ observations\n",
    "   $(\\mu_1, \\dots, \\mu_r)$.\n",
    "\n",
    "- Sampling more within an individual cannot narrow the CI for $\\mu$.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Estimating $\\sigma^2_{\\alpha}$\n",
    "\n",
    "We have seen estimates of $\\mu$ and $\\sigma^2_{\\epsilon}$. Only one parameter\n",
    "remains.\n",
    "\n",
    "- Based on the ANOVA table, we see that\n",
    "$$\n",
    "\\sigma^2_{\\alpha} =  \\frac{1}{n}(\\mathbb{E}(MSTR) - \\mathbb{E}(MSE)).\n",
    "$$\n",
    "\n",
    "- This suggests the estimate\n",
    "$$\n",
    "\\hat{\\sigma^2}_{\\mu} = \\frac{1}{n} (MSTR-MSE).\n",
    "$$\n",
    "\n",
    "- However, this estimate can be negative!\n",
    "\n",
    "- Many such computational difficulties arise in random (and mixed) effects models.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Mixed effects model\n",
    "\n",
    "- The one-way random effects ANOVA is a special case of a so-called *mixed effects* model:\n",
    "$$\n",
    "\\begin{aligned}\n",
    "Y_{n \\times 1} &= X_{n \\times p}\\beta_{p \\times 1} + Z_{n \\times q}\\gamma_{q \\times 1} \\\\\n",
    "\\gamma &\\sim N(0, \\Sigma).\n",
    "\\end{aligned}\n",
    "$$\n",
    "\n",
    "- Various models also consider restrictions on $\\Sigma$ (e.g. diagonal, unrestricted, block diagonal, etc.)\n",
    "\n",
    "\n",
    "- Our multiple linear regression model is a (very simple) mixed-effects model with $q=n$, \n",
    "$$\n",
    "\\begin{aligned}\n",
    "Z &= I_{n \\times n} \\\\\n",
    "\\Sigma &= \\sigma^2 I_{n \\times n}.\n",
    "\\end{aligned}\n",
    "$$"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "3.3.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
